@NOTES
NOTE THAT THIS COPY OF DIFF HEADERS IS THE ONE USED BY THE COMPONENT ITSELF -so dont edit this one
OK so in this document you can store your required headers. You will see there are headers for methods, scripts, triggers and form methods.
on each one after the header there are identifiers-as labels
note in the header the use of some variables. Not the seperators bounded by values starting with a at-symbol and ending with an at-symbol -obviously dont use those values in your text or
you will confuse the code picking this up
Note this a text document rather than an xml document because generally putting this text together is easier than putting into xml.
$_t_HeaderMethodName-this will be replaced with the method name
Current date and time will be replaced with the current date and time
<>DIFF_t_CurrentDesigner gets replaced with the current designer-when you start the system asks who you are(there is a method to auto set it)
$_t_DesignerName is the same value unless its an existing method with no header-bit unfair to declare it was written by the current programmer
other vars in the template are what i use in my code-and are put in the header as is
NOTES@

@DatabaseMethod
IF(FALSE)
//-------------------- Method Set Up ------------------- 
//Database Method Name:      $_t_HeaderMethodName
//Parameter Detail:

//------------------ Method Narrative ------------------

//------------------ Revision Control ----------------
//Date Created:  String(Current date)
//Created BY:  $_t_DesignerName

//Date Modified: 
//Modified By: <>DIFF_t_CurrentDesigner

END IF
//---------- Type Parameters & Local Variables ----------
if(True)
end if
//---------- Reassign Passed Parameters OR get values ----------



//-------------------- Main Method -------------------
DatabaseMethod@

@DatabaseMethodSettings
@Declarationsafterline make sure you tell the code where declarations are if you are auto building declarations
//---------- Type Parameters & Local Variables ----------
Declarationsafterline@
@DeclarationsEndline make sure you tell the code where declarations end if you are auto building declarations
//---------- Reassign Passed Parameters OR get values
DeclarationsEndline@
@CodeafterLine  (This is used to check the header exists-if its not there it will add a header. If this empty no header will be added)
//-------------------- Main Method -------------------
CodeafterLine@

DatabaseMethodSettings@


@ProjectMethod
IF(FALSE)
//-------------------- Method Set Up -------------------
//Project Method Name:      $_t_HeaderMethodName
//Parameter Detail:

//------------------ Method Narrative ------------------

//------------------ Methods/Table List ----------------

//Table(If any): 

//Module: 

//Calling Menu/Method/Form/Object Method: 

//Related Methods: 

//------------------ Assumptions ----------------

//------------------ Revision Control ----------------

//Date Created: String(Current date)

//Created BY: $_t_DesignerName
//Date Modified: 
//Modified By: <>DIFF_t_CurrentDesigner

END IF

//---------- Type Parameters & Local Variables ----------
if(TRUE)

end if
//---------- Reassign Passed Parameters OR get values ----------

If (Count parameters>=1)

ELSE

End if

//-------------------- Main Method -------------------"


ProjectMethod@
@ProjectMethodSettings
@Declarationsafterline make sure you tell the code where declarations are if you are auto building declarations
//---------- Type Parameters & Local Variables ----------
Declarationsafterline@
@DeclarationsEndline make sure you tell the code where declarations end if you are auto building declarations
//---------- Reassign Passed Parameters OR get values
DeclarationsEndline@
@CodeafterLine This is used to check the header exists-if its not there it will add a header. If this empty no header will be added)
//-------------------- Main Method -------------------
CodeafterLine@
ProjectMethodSettings@

@FormMethod
IF(FALSE)
//-------------------- Method Set Up -------------------
//Form Method Name:      $_t_HeaderMethodName
//Parameter Detail:
//------------------ Method Narrative ------------------

//------------------ Methods/Table List ----------------
//Table(If any): 

//Module: 

//Calling Menu/Method/Form/Object Method: 

//Related Methods: 
//------------------ Assumptions ----------------

//------------------ Revision Control ----------------
//Date Created: String(Current date)
//Created BY: $_t_DesignerName
//Date Modified:
//Modified By: <>DIFF_t_CurrentDesigner
END IF
//---------- Type Parameters & Local Variables ----------
if(True)
end if
//---------- Reassign Passed Parameters OR get values ----------
If (Form event>=1)
$_l_FormEvent:=FORM EVENT
ELSE

End if
//-------------------- Main Method -------------------
FormMethod@
@FormMethodSettings
@Declarationsafterline make sure you tell the code where declarations are if you are auto building declarations
//---------- Type Parameters & Local Variables ----------
Declarationsafterline@
@DeclarationsEndline make sure you tell the code where declarations end if you are auto building declarations
//---------- Reassign Passed Parameters OR get values
DeclarationsEndline@
@CodeafterLine This is used to check the header exists-if its not there it will add a header. If this empty no header will be added)
//-------------------- Main Method -------------------
CodeafterLine@
@Includeifmethodblank
Case of
:($_l_FormEvent=On load)


End case
Includeifmethodblank@

FormMethodSettings@

@FormObjectMethod
IF(FALSE)
//-------------------- Method Set Up -------------------
//Object Name:      $_t_HeaderMethodName
//Parameter Detail:
//------------------ Method Narrative ------------------

//------------------ Methods/Table List ----------------
//Table(If any): 
//Module: 
//Calling Menu/Method/Form/Object Method: 
//Related Methods: 
//------------------ Assumptions ----------------

//------------------ Revision Control ----------------
//Date Created: String(Current date)
//Created BY: $_t_DesignerName
//Date Modified:
//Modified By: <>DIFF_t_CurrentDesigner
END IF
//---------- Type Parameters & Local Variables ----------
//---------- Reassign Passed Parameters OR get values ----------
If (Form event>=1)
$_l_FormEvent:=FORM EVENT
ELSE

End if
//-------------------- Main Method -------------------
FormObjectMethod@

@FormObjectMethodSettings
@Declarationsafterline make sure you tell the code where declarations are if you are auto building declarations
//---------- Type Parameters & Local Variables ----------
Declarationsafterline@
@DeclarationsEndline make sure you tell the code where declarations end if you are auto building declarations
//---------- Reassign Passed Parameters OR get values
DeclarationsEndline@
@CodeafterLine This is used to check the header exists-if its not there it will add a header. If this empty no header will be added)
//-------------------- Main Method -------------------
CodeafterLine@
@Includeifmethodblank
Case of
:($_l_FormEvent=On clicked)


End case
Includeifmethodblank@
FormObjectMethodSettings@

@Triggers
IF(FALSE)
//-------------------- Method Set Up -------------------
//Trigger Table Name:      $_Txt_MethodName
//Parameter Detail:"
//------------------ Method Narrative ------------------

//------------------ Revision Control ----------------

//Date Created: "+String(Current date)
//Created BY: " $_t_DesignerName
//Date Modified: "
//Modified By: "+<>DIFF_t_CurrentDesigner
END IF
//---------- Type Parameters & Local Variables ----------


//---------- Reassign Passed Parameters OR get values ----------
If (Trigger event>=1)
$_l_TriggerEvent:=Trigger EVENT


ELSE

End if


//-------------------- Main Method -------------------"
//Triggers@

@TriggersSettings
@Declarationsafterline make sure you tell the code where declarations are if you are auto building declarations
//---------- Type Parameters & Local Variables ----------
Declarationsafterline@
@DeclarationsEndline make sure you tell the code where declarations end if you are auto building declarations
//---------- Reassign Passed Parameters OR get values
DeclarationsEndline@
@CodeafterLine This is used to check the header exists-if its not there it will add a header. If this empty no header will be added)
//-------------------- Main Method -------------------
CodeafterLine@
@Includeifmethodblank
Case of
: ($_l_TriggerEvent=On Saving New Record Event)

: ($_l_TriggerEvent=On Saving Existing Record Event)


: ($_l_TriggerEvent=On Deleting Record Event)
End case
Includeifmethodblank@
TriggersSettings@

